﻿@model Ashirvad.Data.TestEntity
@*<form id="fTestDetail">*@
<div class="row" id="dInformation">
    @if (SessionContext.Instance.LoginUser.UserType == Ashirvad.Common.Enums.UserType.SuperAdmin)
    {
        <div class="col-md-12">
            <div class="col-md-3">
                @Html.Label("Select Branch", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BranchName" id="BranchName" class="form-control requiredDDL" alt="Branch">
                    <option value="0">--Select Branch--</option>
                </select>
                @Html.HiddenFor(x => x.Branch.BranchID)
                @Html.HiddenFor(x => x.TestID)
            </div>
            <div class="col-md-3">
                @Html.Label("Select Standard", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="StandardName" id="StandardName" class="form-control requiredDDL select2" alt="Standard">
                    <option value="0">--Select Standard--</option>
                </select>
                @Html.HiddenFor(x => x.Standard.StandardID)
            </div>
            <div class="col-md-3">
                @Html.Label("Batch Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BatchTime" id="BatchTime" class="form-control requiredDDL select2" alt="Batch Time">
                    <option value="0">--Select Batch Time--</option>
                    <option value="1">Morning</option>
                    <option value="2">AfterNoon</option>
                    <option value="3">Evening</option>
                </select>
                @Html.HiddenFor(x => x.BatchTimeID)
                @Html.HiddenFor(x => x.BatchTimeText)
            </div>
            <div class="col-md-3">
                @Html.Label("Select Subject", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="SubjectName" id="SubjectName" class="form-control requiredDDL select2" alt="Subject">
                    <option value="0">--Select Subject--</option>
                </select>
                @Html.HiddenFor(x => x.Subject.SubjectID)
            </div>
        </div>
        <div class="col-md-12">
            <br />
            <div class="col-md-3">
                @Html.Label("Total Marks", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.Marks, new { @class = "form-control required", @alt = "Marks", autocomplete = "off" })
            </div>
            <div class="col-md-3">
                @Html.Label("Test Date", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <div id="datepickertest" class="input-group date" data-date-format="dd/mm/yyyy">
                    @if (Model == null)
                    {
                        @Html.TextBoxFor(x => x.TestDate, null, new { @class = "form-control", @alt = "Test Date", autocomplete = "off", @readonly = "readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.TestDate, Model.TestDate.ToString("dd/MM/yyyy"), new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Test Date" })
                    }
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
            </div>
            <div class="col-md-3">
                @Html.Label("Test Start Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.TestStartTime, null, new { @class = "form-control readonly timeformat", @alt = "Start Time", autocomplete = "off", @type = "time" })
            </div>
            <div class="col-md-3">
                @Html.Label("Test End Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.TestEndTime, null, new { @class = "form-control readonly timeformat", @alt = "End Time", autocomplete = "off", @type = "time" })
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-3">
                @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control required", @alt = "Remarks", autocomplete = "off" })
            </div>
        </div>
    }
    else
    {
        <div class="col-md-12">
            <div class="col-md-3" style="display:none;">
                @Html.Label("Select Branch", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BranchName" id="BranchName" class="form-control requiredDDL" alt="Branch">
                    <option value="0">--Select Branch--</option>
                </select>
                @Html.HiddenFor(x => x.Branch.BranchID)
                @Html.HiddenFor(x => x.TestID)
            </div>
            <div class="col-md-3">
                @Html.Label("Select Standard", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="StandardName" id="StandardName" class="form-control requiredDDL select2" alt="Standard">
                    <option value="0">--Select Standard--</option>
                </select>
                @Html.HiddenFor(x => x.Standard.StandardID)
            </div>
            <div class="col-md-3">
                @Html.Label("Batch Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BatchTime" id="BatchTime" class="form-control requiredDDL select2" alt="Batch Time">
                    <option value="0">--Select Batch Time--</option>
                    <option value="1">Morning</option>
                    <option value="2">AfterNoon</option>
                    <option value="3">Evening</option>
                </select>
                @Html.HiddenFor(x => x.BatchTimeID)
                @Html.HiddenFor(x => x.BatchTimeText)
            </div>
            <div class="col-md-3">
                @Html.Label("Select Subject", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="SubjectName" id="SubjectName" class="form-control requiredDDL select2" alt="Subject">
                    <option value="0">--Select Subject--</option>
                </select>
                @Html.HiddenFor(x => x.Subject.SubjectID)
            </div>
            <div class="col-md-3">
                @Html.Label("Total Marks", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.Marks, new { @class = "form-control required", @alt = "Marks", autocomplete = "off" })
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-3">
                @Html.Label("Test Date", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <div id="datepickertest" class="input-group date" data-date-format="dd/mm/yyyy">
                    @if (Model == null)
                    {
                        @Html.TextBoxFor(x => x.TestDate, null, new { @class = "form-control", @alt = "Test Date", autocomplete = "off", @readonly = "readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.TestDate, Model.TestDate.ToString("dd/MM/yyyy"), new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Test Date" })
                    }
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
            </div>
            <div class="col-md-3">
                @Html.Label("Test Start Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.TestStartTime, null, new { @class = "form-control readonly timeformat", @alt = "Start Time", autocomplete = "off", @type = "time" })
            </div>
            <div class="col-md-3">
                @Html.Label("Test End Time", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.TestEndTime, null, new { @class = "form-control readonly timeformat", @alt = "End Time", autocomplete = "off", @type = "time" })
            </div>
            <div class="col-md-3">
                @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control required", @alt = "Remarks", autocomplete = "off" })
            </div>
        </div>
    }
</div>
    
@*</form>*@