@model Ashirvad.Data.StaffEntity
<form id="fUserDetail">
    <div class="form-group" id="dInformation">
        <div class="col-md-12">
            @Html.Label("Full Name", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control required", @alt = "Full Name", autocomplete = "off" })
            @Html.HiddenFor(x => x.StaffID)
        </div>
        <div class="col-md-12">
            @Html.Label("Education Qualification", htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Education, new { @class = "form-control", autocomplete = "off" })
        </div>
        <div class="col-md-6">
            @Html.Label("Date of Birth", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
            <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                @if (Model == null)
                {
                    @Html.TextBoxFor(x => x.DOB, null, new { @class = "form-control required", @alt = "Date of Birth", autocomplete = "off", @readonly = "readonly" })
                }
                else
                {
                    if (Model.DOB == null)
                    {
                        @Html.TextBoxFor(x => x.DOB, new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Birth" })
                    }
                    else
                    {
                       @Html.TextBoxFor(x => x.DOB, Model.DOB.Value.ToString("dd/MM/yyyy"), new { @class = "form-control required", autocomplete = "off", @readonly = "readonly", @alt = "Date of Birth" }) 
                    }
                }
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-md-6">
            @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
            <select name="GenderName" id="GenderName" class="form-control select2" alt="Gender">
                <option value="0">--Select Gender--</option>
                <option value="1">Male</option>
                <option value="2">Female</option>
                <option value="3">Transgender</option>
            </select>
            @Html.HiddenFor(x => x.Gender)
        </div>
        <div class="col-md-12">
            @Html.Label("Address", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(x => x.Address, new { @class = "form-control required", autocomplete = "off", @alt = "Address" })
        </div>
        <div class="col-md-12">
            @Html.Label("Mobile No(Login ID)", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control required mobile", autocomplete = "off", maxlength = 10, minlength = 10 ,alt= "Mobile No(Login ID)" })
        </div>
        <div class="col-md-12">
            @Html.Label("Email ID", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(x => x.EmailID, new { @class = "form-control required email", autocomplete = "off",alt= "Email ID" })
        </div>
        <div class="col-md-6">
            @Html.Label("Date of Appointment", htmlAttributes: new { @class = "control-label" })
            <div id="datepickerappointment" class="input-group date" data-date-format="dd/mm/yyyy">
                @if (Model == null)
                {
                    @Html.TextBoxFor(x => x.ApptDT, null, new { @class = "form-control", @alt = "Date of Appointment", autocomplete = "off", @readonly = "readonly" })
                }
                else
                {
                    if (Model.ApptDT == null)
                    {
                        @Html.TextBoxFor(x => x.ApptDT, new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Appointment" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.ApptDT, Model.ApptDT.Value.ToString("dd/MM/yyyy"), new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Appointment" })
                    }
                }
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-md-6">
            @Html.Label("Date of Joining", htmlAttributes: new { @class = "control-label" })
            <div id="datepickerjoining" class="input-group date" data-date-format="dd/mm/yyyy">
                @if (Model == null)
                {
                    @Html.TextBoxFor(x => x.JoinDT, null, new { @class = "form-control", @alt = "Date of Joining", autocomplete = "off", @readonly = "readonly" })
                }
                else
                {
                    if (Model.JoinDT == null)
                    {
                        @Html.TextBoxFor(x => x.JoinDT, new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Joining" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.JoinDT, Model.JoinDT.Value.ToString("dd/MM/yyyy"), new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Joining" })
                    }
                }
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        <div class="col-md-6">
            @Html.Label("Date of Leaving", htmlAttributes: new { @class = "control-label" })
            <div id="datepickerleaving" class="input-group date" data-date-format="dd/mm/yyyy">
                @if (Model == null)
                {
                    @Html.TextBoxFor(x => x.LeavingDT, null, new { @class = "form-control", @alt = "Date of Leaving", autocomplete = "off", @readonly = "readonly" })
                }
                else
                {
                    if (Model.LeavingDT == null)
                    {
                        @Html.TextBoxFor(x => x.LeavingDT, new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Leaving" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.LeavingDT, Model.LeavingDT.Value.ToString("dd/MM/yyyy"), new { @class = "form-control", autocomplete = "off", @readonly = "readonly", @alt = "Date of Leaving" })
                    }
                }
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
        @if (SessionContext.Instance.LoginUser.UserType == Ashirvad.Common.Enums.UserType.SuperAdmin)
        {
    <div class="col-md-6">
        @Html.Label("Select Role", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
        <select name="Role" id="Role" class="form-control requiredDDL select2" alt="Role">
            <option value="0">--Select Role--</option>
            <option value="1">Admin</option>
            <option value="4">Staff</option>
        </select>
        @Html.HiddenFor(x => x.StaffID)
        @Html.HiddenFor(x => x.Userrole)
    </div>
            <div class="form-group UserMasterCreate">
                <div class="col-md-12" style="text-align: right;margin-top:10px;">
                    <a onclick="return SaveUser();" class="ladda-button mb-2 mr-2 btn btn-primary" data-style="expand-left">
                        <span class="ladda-label">
                            Save
                        </span>
                        <span class="ladda-spinner"></span>
                    </a>
                    <a href="@Url.Action("UserMaintenance","User", new { @branchID=0 })" class="ladda-button mb-2 mr-2 btn btn-danger" data-style="expand-left">
                        <span class="ladda-label">
                            Cancel
                        </span>
                        <span class="ladda-spinner"></span>
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="form-group UserMasterCreate">
                <div class="col-md-6" style="text-align: right;margin-top:27px;">
                    <a onclick="return SaveUser();" class="ladda-button mb-2 mr-2 btn btn-primary" data-style="expand-left">
                        <span class="ladda-label">
                            Save
                        </span>
                        <span class="ladda-spinner"></span>
                    </a>
                    <a href="@Url.Action("UserMaintenance","User", new { @branchID=0 })" class="ladda-button mb-2 mr-2 btn btn-danger" data-style="expand-left">
                        <span class="ladda-label">
                            Cancel
                        </span>
                        <span class="ladda-spinner"></span>
                    </a>
                </div>
            </div>
        }

        @if (SessionContext.Instance.LoginUser.UserType == Ashirvad.Common.Enums.UserType.SuperAdmin)
        {
            <div class="col-md-12">
                @Html.Label("Select Branch", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BranchName" id="BranchName" class="form-control requiredDDL select2" alt="Branch">
                    <option value="0">--Select Branch--</option>
                </select>
                @Html.HiddenFor(x => x.BranchInfo.BranchID)
            </div>
        }
        else
        {
            <div class="col-md-12" style="display: none;">
                @Html.Label("Select Branch", htmlAttributes: new { @class = "control-label" })<span style="color:red">*</span>
                <select name="BranchName" id="BranchName" class="form-control" alt="Branch">
                    <option value="0">--Select Branch--</option>
                </select>
                @Html.HiddenFor(x => x.BranchInfo.BranchID)
            </div>
        }
    </div>
</form>
